//terminal 
// vi server.js

/* server.js
var express = require('express');
var bodyParser = require('body-parser');
var mongoose = require('mongoose');
var User = require('./models/User');
var app = express();
app.use(bodyParser.json());

mongoUri = process.env.mongoUri
mongoose.connect(mongoUri);

app.get('/users', function(req, res) {
	User.find({}, function(err, users) {
		res.json(users);
	});
});

app.post('/users', function(req,res) {
	console.log('post /users');
	var user = new User(req.body);
	user.save(function(err, user) {
		res.json(user);
	});
});

var port = process.env.port || 3000;
app.listen(port, function() {
	console.log('server started');
});
*/

//terminal
// cd models/
// vi User.js

/* models/User.js
var mongoose = require('mongoose');

var userSchema = mongoose.Schema({
	name: String
});

module.exports = mongoose.model('User', userSchema);
*/

//terminal 
// cd ..
// vi docker-compose.yml

/* docker-compose.yml
database:
	image: mongo

api:
	build: .
	volumes:
		- .:/usr/src/app
	ports:
		- "3000:80"
	environment:
		port: "80"
		mongoUri: "mongodb://database/app-dev"
	links:
		- database
*/

//terminal
// docker-compose up -d
// curl http://localhost:3000/users
// curl -H "Content-Type: application/json" -X POST -d '{"name": "john"}' http://localhost:3000/users
// curl http://localhost:3000/users
// curl -H "Content-Type: application/json" -X POST -d '{"name": "mary"}' http://localhost:3000/users
// curl http://localhost:3000/users
// docker ps
// docker exec -it service_api_1 /bin/bash
// cat /etc/hosts
// exit
// docker-compose stop
// docker-compose up -d
// curl http://localhost:3000/users
// docker ps
// docker inspect service_database_1 | less
// /Volumes
// vi docker-compose.yml
// 











